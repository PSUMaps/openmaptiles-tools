diff --git a/test/single_table.osc b/test/single_table.osc
index c3497669..faf219a4 100644
--- a/test/single_table.osc
+++ b/test/single_table.osc
@@ -23,4 +23,9 @@
       <tag k="building" v="office"/>
     </relation>
   </modify>
+
+  <modify>
+    <node id="20002" version="2" timestamp="2011-11-11T00:11:11Z" lat="43" lon="13"/>
+  </modify>
+
 </osmChange>
diff --git a/test/single_table_test.go b/test/single_table_test.go
index 19cf852b..72b8e838 100644
--- a/test/single_table_test.go
+++ b/test/single_table_test.go
@@ -111,6 +111,7 @@ func TestSingleTable(t *testing.T) {
 		ts.assertHstore(t, []checkElem{
 			{"osm_all", -20201, "*", map[string]string{"random": "tag", "highway": "yes"}},
 		})
+		ts.assertGeomLength(t, checkElem{"osm_all", -20201, "*", nil}, 111319.5)
 	})
 
 	t.Run("NonMappedClosedWayIsMissing", func(t *testing.T) {
@@ -209,6 +210,10 @@ func TestSingleTable(t *testing.T) {
 		}
 	})
 
+	t.Run("ModifiedWayGeometryAfterNodeMoved", func(t *testing.T) {
+		ts.assertGeomLength(t, checkElem{"osm_all", -20201, "*", nil}, 222639)
+	})
+
 	t.Run("Cleanup", func(t *testing.T) {
 		ts.dropSchemas()
 		if err := os.RemoveAll(ts.dir); err != nil {
diff --git a/writer/ways.go b/writer/ways.go
index 6db70e70..9e915940 100644
--- a/writer/ways.go
+++ b/writer/ways.go
@@ -89,8 +89,6 @@ func (ww *WayWriter) loop() {
 			return true
 		}
 
-		w.ID = ww.wayID(w.ID)
-
 		var err error
 		inserted := false
 		insertedPolygon := false
@@ -140,6 +138,7 @@ func (ww *WayWriter) buildAndInsert(
 
 	// make copy to avoid interference with polygon/linestring matches
 	way := osm.Way(*w)
+	way.ID = ww.wayID(way.ID)
 
 	var err error
 	var geosgeom *geos.Geom
@@ -175,7 +174,6 @@ func (ww *WayWriter) buildAndInsert(
 			inserted = false
 		}
 		for _, p := range parts {
-			way := osm.Way(*w)
 			geom = geomp.Geometry{Geom: p, Wkb: g.AsEwkbHex(p)}
 			if isPolygon {
 				if err := ww.inserter.InsertPolygon(way.Element, geom, matches); err != nil {
